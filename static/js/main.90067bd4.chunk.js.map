{"version":3,"sources":["components/note.component.jsx","components/add-note.component.jsx","components/note-list.component.jsx","components/search-box.component.jsx","components/header.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Note","id","text","date","handleDelete","className","size","onClick","AddNote","handleAddNote","useState","noteText","setNoteText","cols","rows","placeholder","value","onChange","event","target","length","autoFocus","trim","NoteList","notes","map","note","SearchBox","handleSearch","type","Header","handleThemeToggle","isDarkMode","App","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","nanoid","toLocaleDateString","newNotes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90067bd4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {MdDeleteForever} from \"react-icons/md\";\r\n\r\n export const Note = ({id, text, date, handleDelete}) => {\r\n    \r\n    const deleteNote = () => {\r\n        handleDelete(id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            <span>{text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever \r\n                className=\"note-delete\" \r\n                size=\"1.3rem\"\r\n                onClick={deleteNote}\r\n                /> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState} from \"react\"\r\n\r\n\r\nexport const AddNote = ({handleAddNote}) => {\r\n    const [noteText, setNoteText] = useState(\"\");\r\n\r\n    const charLimit = 200\r\n\r\n    const handleChange = (event) => {\r\n        if(charLimit - event.target.value.length >= 0) {\r\n            setNoteText(event.target.value)\r\n        }\r\n    }\r\n    \r\n    const handleSaveClick = () => {\r\n        if(noteText.trim().length > 0) {\r\n            handleAddNote(noteText)\r\n            setNoteText(\"\")\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <div className=\"note new\">\r\n            <textarea \r\n            cols=\"10\" \r\n            rows=\"8\" \r\n            placeholder=\"Add new note here...\"\r\n            value={noteText}\r\n            onChange={handleChange}\r\n            autoFocus\r\n            />\r\n            \r\n            <div className=\"note-footer\">\r\n                <small>{charLimit - noteText.length} remaining</small>\r\n                <button className=\"save\" onClick={handleSaveClick}>Save</button>\r\n            </div>\r\n        </div>                                                  \r\n    )           \r\n}","import React from \"react\";\r\nimport { Note } from \"./note.component\";\r\nimport { AddNote } from \"./add-note.component\";\r\n\r\nexport const NoteList = ({ notes, handleAddNote, handleDelete }) => {\r\n  return (\r\n    <div className=\"notes\">\r\n      {notes.map((note) => (\r\n        <Note \r\n        id={note.id} \r\n        text={note.text} \r\n        date={note.date} \r\n        handleDelete={handleDelete}/>\r\n      ))}\r\n\r\n      <AddNote handleAddNote={handleAddNote}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import { MdSearch } from \"react-icons/md\";\r\n\r\nexport const SearchBox = ({ handleSearch }) => {\r\n  const filter = (event) => {\r\n    console.log(event.target.value);\r\n    handleSearch(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      <MdSearch className=\"search-icon\" size=\"1.3rem\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search notes...\"\r\n        onChange={(event) => handleSearch(event.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const Header = ({ handleThemeToggle }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header-text\">Notes +</h1>\r\n      <button\r\n        className=\"save\"\r\n        onClick={() => handleThemeToggle((isDarkMode) => !isDarkMode)}\r\n      >\r\n        Toggle Mode\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\"\nimport { NoteList } from \"./components/note-list.component\"\nimport { SearchBox } from \"./components/search-box.component\"\nimport { Header } from \"./components/header.component\"\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [searchText, setSearchText] = useState(\"\")\n  const [darkMode, setDarkMode] = useState(false)\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"cra-notes-app-data\"))\n    if (savedNotes) {\n      setNotes(savedNotes)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"cra-notes-app-data\", JSON.stringify(notes))\n  }, [notes])\n\n  const addNewNote = (text) => {\n    const date = new Date()\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    }\n    const newNotes = [...notes, newNote]\n    setNotes(newNotes)\n  }\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter(note => note.id !== id)\n    setNotes(newNotes)\n  }\n\n\n\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\" >\n        <Header handleThemeToggle={setDarkMode} />\n        <SearchBox handleSearch={setSearchText} />\n        <NoteList\n          notes={notes.filter((note) => note.text.toLowerCase().includes(searchText))}\n          handleAddNote={addNewNote}\n          handleDelete={deleteNote} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}